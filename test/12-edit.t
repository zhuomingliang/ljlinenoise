#!/usr/bin/env luajit

local l = require 'linenoise'

require 'Test.More'

plan(87)

local fd = io.tmpfile()
local h1 = l.new_history()
h1:add'line1'
h1:add'line2'
h1:add'line3'
h1:add'line4'

local ed = l.new_edit(fd, 'prompt>', 80, h1)
type_ok( ed, 'table', "new_edit" )
is( ed.history, h1 )
is( #ed.history, 5 )
is( ed.history[5], '' )
is( ed.line, '' )
is( ed.pos, 1, "initial pos" )

ed:Insert('a')
is( ed.line, 'a', "Insert" )
is( ed.pos, 2 )
ed:Insert('b')
is( ed.line, 'ab' )
is( ed.pos, 3 )

ed:MoveLeft()
is( ed.pos, 2, "MoveLeft" )
ed:MoveLeft()
is( ed.pos, 1 )
ed:MoveLeft()
is( ed.pos, 1 )

ed:MoveRight()
is( ed.pos, 2, "MoveRight" )
ed:MoveRight()
is( ed.pos, 3 )
ed:MoveRight()
is( ed.pos, 3 )

ed:Insert('c')
is( ed.line, 'abc', "Insert" )
is( ed.pos, 4 )
ed:Insert('d')
is( ed.line, 'abcd' )
is( ed.pos, 5 )

ed:MoveHome()
is( ed.pos, 1, "MoveHome" )
ed:Insert('0')
is( ed.line, '0abcd' )
is( ed.pos, 2 )

ed:MoveEnd()
is( ed.pos, 6, "MoveEnd" )
ed:MoveLeft()
is( ed.pos, 5)
ed:Insert('4')
is( ed.line, '0abc4d' )
is( ed.pos, 6 )
ed:Insert('5')
is( ed.line, '0abc45d' )
is( ed.pos, 7 )

ed:MoveHome()
ed:MoveRight()
ed:Backspace()
is( ed.line, 'abc45d', "Backspace" )
is( ed.pos, 1 )
ed:Backspace()
is( ed.line, 'abc45d' )
is( ed.pos, 1 )

ed:MoveEnd()
ed:MoveLeft()
is( ed.pos, 6 )
ed:Backspace()
is( ed.line, 'abc4d' )
is( ed.pos, 5 )
ed:Backspace()
is( ed.line, 'abcd' )
is( ed.pos, 4 )
ed:Backspace()
is( ed.line, 'abd' )
is( ed.pos, 3 )
ed:Backspace()
is( ed.line, 'ad' )
is( ed.pos, 2 )
ed:Backspace()
is( ed.line, 'd' )
is( ed.pos, 1 )
ed:MoveEnd()
ed:Backspace()
is( ed.line, '' )
is( ed.pos, 1 )

ed:Insert('1')
ed:Insert('2')
ed:Insert('3')
ed:Insert('4')
ed:Insert('5')
ed:MoveHome()
ed:Swap()
is( ed.line, '12345', "Swap" )
ed:MoveRight()
ed:Swap()
is( ed.line, '21345' )
is( ed.pos, 3 )
ed:Swap()
is( ed.line, '23145' )
is( ed.pos, 4 )
ed:Swap()
is( ed.line, '23415' )
is( ed.pos, 5 )
ed:Swap()
is( ed.line, '23451' )
is( ed.pos, 5 )
ed:Swap()
is( ed.line, '23415' )
is( ed.pos, 5 )

ed:DeleteLine()
is( ed.line, '', "DeleteLine" )
is( ed.pos, 1 )

ed:Insert('A')
ed:Insert('B')
ed:Insert('C')
ed:DeleteEnd()
is( ed.line, 'ABC', "DeleteEnd" )
is( ed.pos, 4 )
ed:MoveLeft()
ed:MoveLeft()
ed:DeleteEnd()
is( ed.line, 'A' )
is( ed.pos, 2 )

ed:History(-1)
is( ed.line, 'line4', "History" )
ed:History(-1)
is( ed.line, 'line3' )
ed:History(-1)
is( ed.line, 'line2' )
ed:History(-1)
is( ed.line, 'line1' )
ed:History(-1)
is( ed.line, 'line1' )
ed:History(1)
is( ed.line, 'line2' )
ed:History(1)
is( ed.line, 'line3' )
ed:History(1)
is( ed.line, 'line4' )
ed:History(1)
is( ed.line, 'A' )
ed:History(1)
is( ed.line, 'A' )
is( ed.pos, 2 )

ed:Insert('B')
ed:Insert('C')
ed:Insert('D')
is( ed.line, 'ABCD' )
ed:MoveHome()
ed:MoveRight()
ed:Delete()
is( ed.line, 'ACD', "Delete" )
is( ed.pos, 2 )
ed:Delete()
is( ed.line, 'AD' )
is( ed.pos, 2 )
ed:Delete()
is( ed.line, 'A' )
is( ed.pos, 2 )
ed:Delete()
is( ed.line, 'A' )
is( ed.pos, 2 )
ed:MoveHome()
ed:Delete()
is( ed.line, '' )
is( ed.pos, 1 )
ed:Delete()
is( ed.line, '' )
is( ed.pos, 1 )
